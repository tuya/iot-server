{"version":3,"sources":["../webpack/universalModuleDefinition","components/BDP/Block/index.less","components/BDP/Slider/index.less","components/YDelDeviceModal/index.less","components/BAssetTree/index.less","public-path.js","pages/index.less","components/BDP/Block/index.tsx","components/BDP/Default/index.tsx","components/BDP/Input/index.tsx","components/BDP/Select/index.tsx","components/BDP/Slider/index.tsx","components/BDP/Switcher/index.tsx","pages/components/CtrlDP.tsx","components/BModalForm/index.tsx","pages/components/EditDevice.tsx","components/YDelDeviceModal/index.tsx","components/YAddDevice/AddDeviceModal.tsx","components/YAddDevice/index.tsx","components/BAssetTree/util.tsx","components/YAssetTree/util.ts","components/BAssetTree/index.tsx","components/YAssetTree/index.tsx","hooks/index.ts","pages/index.tsx","init.ts","App.tsx","index.tsx","lang/en.ts","lang/zh.ts","lang/index.ts"],"names":["root","factory","exports","module","define","amd","window","__POWERED_BY_QIANKUN__","__webpack_public_path__","__INJECTED_PUBLIC_PATH_BY_QIANKUN__","Label","children","className","styles","item","Block","wrapper","JsonView","defaultValue","name","src","InputDP","disabled","options","onChange","value","e","target","Option","Select","SelectDP","data","style","width","map","DPSlider","max","min","unit","step","marks","styled","tooltipVisible","getTooltipPopupContainer","triggerNode","Switcher","direction","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","getDeviceInfoWithDP","apiService","modifyDeviceDP","CtrlDP","title","visible","onConfirm","deviceId","useTranslation","t","locale","i18n","language","useState","setData","values","setValues","baseData","setBaseData","loading","setLoading","useEffect","then","info","status","cacheDP","forEach","code","editable","state","Object","assign","catch","resetData","justify","align","wrap","drawerTitle","onClick","footer","float","type","changedStatus","keys","key","baseItem","push","length","onValidation","onClose","destroyOnClose","placement","closable","spinning","index","props","jsonConfig","JSON","parse","err","console","error","scale","scaleFunc","Math","pow","result","isNaN","maxlen","maxlength","Input","range","jsonValue","Default","random","useForm","Form","layout","labelCol","span","wrapperCol","ModalForm","modalStatus","Promise","resolve","onCancel","showLoading","form","confirmLoading","setConfirmLoading","onOk","validateFields","resetFields","preserve","modifyDeviceInfo","Item","EditDeviceModal","deviceName","initialValue","label","rules","required","message","showDelDeviceConfirmModal","removeDeviceById","Modal","confirm","content","okText","cancelText","getProjectInfo","downloadFile","canvas","aLink","document","createElement","blob","parts","split","contentType","raw","atob","rawLength","uInt8Array","Uint8Array","i","charCodeAt","Blob","base64Img2Blob","toDataURL","download","Date","getTime","href","URL","createObjectURL","click","AddDeviceModal","setModalStatus","projectName","setProjectName","projectCode","setProjectCode","res","project_name","project_code","icon","PlusOutlined","getElementById","getContainer","id","includeMargin","size","height","marginLeft","alt","AddDevice","filterTreePath","searchKey","dataList","path","newItem","indexOf","beforeStr","substr","afterStr","prePathLen","subPath","getAllExpendKeyFromFirstChild","isFirst","firstChild","formatAssetTreeData","list","temp","asset_id","asset_name","checkable","is_authorized","selectable","isLeaf","subAssets","getAllLeafNodeByKey","tree","inPath","Array","isArray","subResult","AssetTree","defaultSelectedValue","defaultCheckedValue","defaultExpandValue","onSelect","onCheck","treeWrapProps","autoExpandParent","setAutoExpandParent","expandedKeys","setExpandedKeys","treeData","setTreeData","selectedKeys","setSelectedKeys","Title","level","allowClear","maxLength","marginBottom","placeholder","taggedTreeData","expandedPath","suffix","SearchOutlined","onExpand","defaultCheckedKeys","YAssetTree","location","useLocation","history","useHistory","query","URLSearchParams","search","setDataList","setDefaultValue","expandValues","setExpandValues","getEntireTree","assetId","get","autoHoldAssetId","autoSelectFirst","pathname","getDevicesInfoByAssetId","DeviceList","setList","page","setPage","pageSize","setPageSize","totalCount","setTotalCount","ctrlDPVisible","setCtrlDPVisible","ctrlDPTitle","setCtrlDPTitle","ctrlDPDeviceId","setCtrlDPDeviceId","configCtrlDP","show","editDeviceModalStatus","setEditDeviceModalStatus","editDeviceName","setEditDeviceName","editDeviceId","setEditDeviceId","configEditDevice","setAssetId","tableFresh","setTableFresh","freshTable","curPage","curPageSize","total","fetchTableData","columns","dataIndex","tableCell","render","text","record","online","cycle","green","red","time","dayjs","active_time","format","textBlue","background","ctrlWrapper","assetTreeWrap","assetTreeHeight","overflow","tableContainerWrap","tableCtrlWrap","ReloadOutlined","rowKey","dataSource","pagination","current","defaultPageSize","pageNumber","onShowSizeChange","currentSize","nextPageSize","showSizeChanger","EditDevice","needFresh","init","msgWhiteList","getI18n","changeLanguage","configMethod","initGlobalConfig","headers","baseURL","onError","errorObj","msg","apiMethodName","localStorage","removeItem","mainHistory","includes","App","setGlobalState","micState","zhCN","enUS","en","translation","refresh","table","column","activeTime","opt","row","offline","edit","ctrl","remove","assetCascader","addDevice","btn","close","downloadQrCode","hint","ctrlDP","cancel","removeDevice","editDevice","errorMax","assetTree","searchPlaceholder","zh","base","container","ReactDOM","basename","querySelector","bootstrap","a","mount","lang","onGlobalStateChange","prev","unmount","unmountComponentAtNode","use","LanguageDetector","initReactI18next","resources","fallbackLng","interpolation","escapeValue"],"mappings":"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","file":"static/js/main.a49d10a0.chunk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"device-app-main\"] = factory();\n\telse\n\t\troot[\"device-app-main\"] = factory();\n})(window, function() {\nreturn ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"wrapper_1OdrC\",\"item\":\"item_fiAnv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"styled\":\"styled_3o6sd\",\"ant-tooltip-inner\":\"ant-tooltip-inner_o_1GK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-content\":\"modal-content_1_5ys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tree-highlight-value\":\"tree-highlight-value_1qNBk\"};","/* eslint-disable no-undef */\nif (window.__POWERED_BY_QIANKUN__) {\n  __webpack_public_path__ = window.__INJECTED_PUBLIC_PATH_BY_QIANKUN__;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"background_slzll\",\"assetTreeWrap\":\"assetTreeWrap_2-jB0\",\"tableContainerWrap\":\"tableContainerWrap_1az3U\",\"tableCtrlWrap\":\"tableCtrlWrap_HhaVM\",\"ctrlLabel\":\"ctrlLabel_2MgNX\",\"editInputHint\":\"editInputHint_VTmLk\",\"cycle\":\"cycle_18QvG\",\"green\":\"green_20DIG\",\"red\":\"red_1N1d5\",\"textBlue\":\"textBlue_3T0i2\",\"tableCell\":\"tableCell_j9K89\",\"drawerTitle\":\"drawerTitle_2joZ5\",\"assetTreeHeight\":\"assetTreeHeight_29DMl\"};","/**\n * DP区块wrapper\n * @returns\n */\nimport styles from './index.less';\n\nconst Block = ({ children }: { children: any }) => {\n  return <div className={styles.wrapper}>{children}</div>;\n};\n\nexport const Label = ({ children }: { children: any }) => {\n  return <div className={styles.item}>{children}</div>;\n};\n\nexport default Block;\n","/**\n * 未适配的类型，只读展示json\n */\nimport ReactJson from 'react-json-view';\nimport Block, { Label } from '../Block';\n\ninterface IProps {\n  name: string;\n  defaultValue: any;\n}\n\nconst JsonView = ({ defaultValue, name }: IProps) => {\n  return (\n    <Block>\n      <Label>{name}</Label>\n      <ReactJson src={defaultValue} />;\n    </Block>\n  );\n};\n\nexport default JsonView;\n","/**\n * string类型DP\n */\nimport React from 'react';\nimport { Input } from 'antd';\nimport Block, { Label } from '../Block';\n\ninterface IProps {\n  disabled: boolean;\n  defaultValue: string;\n  name: string;\n  onChange: (value: string) => void;\n  options?: any;\n}\n\nconst InputDP = ({\n  disabled = false,\n  defaultValue = '',\n  name = '',\n  options = {},\n  onChange = (value: string) => {},\n}: IProps) => {\n  return (\n    <Block>\n      <Label>{name}</Label>\n      <Input\n        {...options}\n        defaultValue={defaultValue}\n        disabled={disabled}\n        onChange={(e) => {\n          const value = e.target.value;\n          onChange(value);\n        }}\n      />\n    </Block>\n  );\n};\n\nexport default InputDP;\n","/**\n * enum类型DP\n */\nimport { Select } from 'antd';\nimport Block, { Label } from '../Block';\n\nconst { Option } = Select;\n\ninterface IProps {\n  disabled: boolean;\n  defaultValue: string;\n  name: string;\n  data: Array<any>;\n  onChange: (value: string) => void;\n}\n\nconst SelectDP = ({\n  name = '',\n  defaultValue,\n  disabled,\n  onChange,\n  data,\n}: IProps) => {\n  return (\n    <Block>\n      <Label>{name}</Label>\n      <Select\n        style={{\n          width: '100%',\n        }}\n        defaultValue={defaultValue}\n        disabled={disabled}\n        onChange={onChange}\n      >\n        {data.map((item) => {\n          return (\n            <Option value={item} key={item}>\n              {item}\n            </Option>\n          );\n        })}\n      </Select>\n    </Block>\n  );\n};\n\nexport default SelectDP;\n","/**\n * DP Integer类型\n */\nimport { Slider } from 'antd';\n\nimport Block from '../Block';\nimport styles from './index.less';\n\ninterface IProps {\n  defaultValue: number;\n  disabled: boolean;\n  name: string;\n  max: number;\n  min: number;\n  step: number;\n  unit: string;\n  onChange: (value: number | [number, number]) => void;\n}\n\nconst DPSlider = ({\n  disabled,\n  max,\n  min,\n  unit,\n  defaultValue,\n  step,\n  onChange,\n  name,\n}: IProps) => {\n  const marks = {\n    [min]: `${min}${unit}`,\n    [max]: `${max}${unit}`,\n  };\n  return (\n    <Block>\n      <label>{name}</label>\n      <div className={styles.styled}>\n        <Slider\n          tooltipVisible\n          getTooltipPopupContainer={(triggerNode) => triggerNode}\n          marks={marks}\n          defaultValue={defaultValue}\n          disabled={disabled}\n          step={step}\n          max={max}\n          min={min}\n          onChange={onChange}\n        />\n      </div>\n    </Block>\n  );\n};\n\nexport default DPSlider;\n","/**\n * boolean类型DP\n */\nimport React from 'react';\nimport { Switch, Space } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport Block from '../Block';\n\ninterface IProps {\n  name: string;\n  disabled: boolean;\n  defaultValue: boolean;\n  onChange: (value: boolean) => void;\n}\n\nconst Switcher = ({\n  name = '',\n  disabled = false,\n  defaultValue = false,\n  onChange = (value: boolean) => {},\n}: IProps) => {\n  // const [checked, setChecked] = useState<boolean>(defaultValue);\n  return (\n    <Block>\n      <Space direction=\"vertical\">\n        <label>{name}</label>\n        <Switch\n          checkedChildren={<CheckOutlined />}\n          unCheckedChildren={<CloseOutlined />}\n          defaultChecked={defaultValue}\n          disabled={disabled}\n          // checked={checked}\n          onChange={(value) => {\n            // setChecked(value);\n            onChange(value);\n          }}\n        />\n      </Space>\n    </Block>\n  );\n};\n\nexport default Switcher;\n","/**\n * 控制设备DP\n */\nimport { useEffect, useState } from 'react';\nimport { Drawer, Row, Col, Button, Space, Empty, Spin } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { apiService } from '@tuya/connector';\n\nimport DefaultDP from '@/components/BDP/Default';\nimport InputDP from '@/components/BDP/Input';\nimport SelectDP from '@/components/BDP/Select';\nimport Slider from '@/components/BDP/Slider';\nimport Switcher from '@/components/BDP/Switcher';\n\nimport styles from '../index.less';\n\n// import testData from './dp.test';\n\nconst { getDeviceInfoWithDP, modifyDeviceDP } = apiService;\n\ninterface IProps {\n  onConfirm: (values: any) => void;\n  visible: boolean;\n  title: string;\n  deviceId: string;\n}\n\nconst CtrlDP = ({ title = '', visible, onConfirm, deviceId }: IProps) => {\n  const { t, i18n } = useTranslation();\n\n  const locale = i18n.language;\n\n  // 渲染数据\n  const [data, setData] = useState<any[]>([]);\n  // item修改数据\n  const [values, setValues] = useState<{ [propName: string]: any }>({});\n  // base对比数据\n  const [baseData, setBaseData] = useState<{ [propName: string]: any }>({});\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (visible && deviceId) {\n      setLoading(true);\n      getDeviceInfoWithDP(deviceId)\n        .then((info) => {\n          setLoading(false);\n          if (info) {\n            const data = info.status;\n            // const data = testData.status;\n            setData(data);\n            // 缓存dp\n            const cacheDP: { [propName: string]: any } = {};\n            data.forEach((item) => {\n              cacheDP[item.code] = {\n                code: item.code,\n                value: item.value,\n                editable: item.editable,\n              };\n            });\n            setBaseData(cacheDP);\n            setValues((state) => {\n              return Object.assign({}, state, cacheDP);\n            });\n          }\n        })\n        .catch(() => {\n          setLoading(false);\n        });\n    }\n  }, [deviceId, visible]);\n\n  const onValidation = () => {\n    const changedStatus: any[] = [];\n    Object.keys(values).forEach((key) => {\n      const item = values[key].value;\n      // 查看是否有变更\n      const baseItem = baseData[key];\n      if (baseItem?.editable && baseItem?.value !== item && item != null) {\n        changedStatus.push({\n          code: key,\n          value: item,\n        });\n      }\n    });\n\n    if (changedStatus.length > 0) {\n      // todo loading\n      return modifyDeviceDP(deviceId, changedStatus).then(() => {\n        onConfirm(changedStatus);\n        resetData();\n      });\n    }\n    resetData();\n  };\n\n  const resetData = () => {\n    setBaseData([]);\n    setValues({});\n    setData([]);\n  };\n\n  return (\n    <Drawer\n      title={\n        <Row justify=\"space-between\" align=\"middle\" wrap={false}>\n          <Col>\n            <span className={styles.drawerTitle}>{title}</span>\n          </Col>\n          <Col>\n            <span\n              onClick={() => {\n                onConfirm(values);\n                resetData();\n              }}\n            >\n              <CloseOutlined />\n            </span>\n          </Col>\n        </Row>\n      }\n      footer={\n        <div style={{ float: 'right' }}>\n          <Space align=\"end\">\n            <Button\n              onClick={() => {\n                onConfirm(values);\n                resetData();\n              }}\n            >\n              {t('ctrlDP.cancel')}\n            </Button>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                onValidation();\n              }}\n            >\n              {t('ctrlDP.confirm')}\n            </Button>\n          </Space>\n        </div>\n      }\n      onClose={() => {\n        onConfirm(values);\n        resetData();\n      }}\n      destroyOnClose\n      width=\"376\"\n      placement=\"right\"\n      closable={false}\n      visible={visible}\n    >\n      {loading ? (\n        <Spin spinning={loading}>\n          <Empty />\n        </Spin>\n      ) : data.length ? (\n        data.map((item, index) => {\n          const props = {\n            defaultValue: item.value,\n            disabled: !item.editable,\n            name: locale === 'zh-CN' ? item.name || item.code : item.code,\n            code: item.code,\n            onChange: (value: any) => {\n              setValues((state) => {\n                return Object.assign({}, state, {\n                  [item.code]: {\n                    code: item.code,\n                    value,\n                  },\n                });\n              });\n            },\n          };\n\n          if (item.type === 'Integer') {\n            let jsonConfig: { [propName: string]: any } = {};\n            try {\n              jsonConfig = JSON.parse(item.options);\n            } catch (err) {\n              console.error(err);\n            }\n            const { max, min, scale, step, unit = '' } = jsonConfig;\n\n            const scaleFunc = (value: number) => {\n              return value / Math.pow(10, scale);\n            };\n\n            return (\n              <Slider\n                {...props}\n                key={`${item.code}${index}${item.value}`}\n                unit={unit}\n                max={scaleFunc(max)}\n                min={scaleFunc(min)}\n                step={scaleFunc(step)}\n              />\n            );\n          }\n\n          if (item.type === 'Boolean') {\n            return (\n              <Switcher key={`${item.code}${index}${item.value}`} {...props} />\n            );\n          }\n\n          if (item.type === 'String') {\n            let options: { [propName: string]: any } = {};\n            try {\n              const result = JSON.parse(item.options);\n              if (!isNaN(+result.maxlen)) {\n                options.maxlength = +result.maxlen;\n              }\n            } catch (err) {\n              console.error(err);\n            }\n            return (\n              <InputDP\n                key={`${item.code}${index}${item.value}`}\n                {...props}\n                options={options}\n              />\n            );\n          }\n\n          if (item.type === 'Enum') {\n            let options: Array<String> = [];\n            try {\n              const result = JSON.parse(item.options);\n              if (result.range) {\n                options = result.range;\n              }\n            } catch (err) {\n              console.error(err);\n            }\n            return (\n              <SelectDP\n                key={`${item.code}${index}${item.value}`}\n                {...props}\n                data={options}\n              />\n            );\n          }\n\n          let jsonValue: { [propName: string]: any } = {};\n          try {\n            jsonValue = JSON.parse(item.value);\n          } catch (err) {\n            console.error(err);\n          }\n          return (\n            <DefaultDP\n              key={`${item.code}${index}${Math.random()}`}\n              {...props}\n              defaultValue={jsonValue}\n            />\n          );\n        })\n      ) : (\n        <Empty />\n      )}\n    </Drawer>\n  );\n};\n\nexport default CtrlDP;\n","/**\n * 集成form的modal\n */\nimport { useState } from 'react';\nimport { Modal, Form } from 'antd';\n\nconst { useForm } = Form;\n\ninterface IProps {\n  modalStatus: boolean;\n  title: string;\n  children: React.ReactNode;\n  onConfirm: (values: any) => Promise<boolean>;\n  onCancel?: () => void;\n  showLoading?: boolean;\n}\n\nconst layout = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 16 },\n};\n\nconst ModalForm = ({\n  modalStatus = false,\n  onConfirm = (values: any) => {\n    return Promise.resolve(true);\n  },\n  onCancel = () => {},\n  title = '',\n  children,\n  showLoading = false,\n}: IProps) => {\n  const [form] = useForm();\n  const [confirmLoading, setConfirmLoading] = useState(false);\n\n  return (\n    <Modal\n      destroyOnClose\n      visible={modalStatus}\n      title={title}\n      confirmLoading={confirmLoading}\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            setConfirmLoading(true);\n            onConfirm(values).then(() => {\n              setConfirmLoading(false);\n              form.resetFields();\n            });\n          })\n          .catch((info) => {\n            console.error('Validate Failed:', info);\n          });\n      }}\n    >\n      <Form form={form} preserve={false} {...layout}>\n        {children}\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ModalForm;\n","/**\n * 编辑设备弹窗\n */\nimport { Form, Input } from 'antd';\nimport { apiService } from '@tuya/connector';\nimport { useTranslation } from 'react-i18next';\nimport ModalForm from '@/components/BModalForm';\n\nconst { modifyDeviceInfo } = apiService;\n\nconst { Item } = Form;\n\ninterface IProps {\n  modalStatus: boolean;\n  deviceId: string;\n  name: string;\n  onConfirm: (needFresh: boolean) => void;\n}\n\nconst EditDeviceModal = ({\n  modalStatus = false,\n  onConfirm = () => {},\n  deviceId,\n  name,\n}: IProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <ModalForm\n      title={t('editDevice.title')}\n      modalStatus={modalStatus}\n      onConfirm={(values) => {\n        const { deviceName } = values;\n        return modifyDeviceInfo(deviceId, deviceName)\n          .then(() => {\n            onConfirm(true);\n            return true;\n          })\n          .catch((err) => {\n            console.error(err);\n            return true;\n          });\n      }}\n      onCancel={() => {\n        onConfirm(false);\n      }}\n    >\n      <Item\n        initialValue={name}\n        label={t('editDevice.label')}\n        name=\"deviceName\"\n        rules={[\n          { required: true },\n          {\n            max: 20,\n            message: t('editDevice.errorMax'),\n          },\n        ]}\n      >\n        <Input />\n      </Item>\n    </ModalForm>\n  );\n};\n\nexport default EditDeviceModal;\n","/**\n * 删除设备\n */\nimport { Modal } from 'antd';\nimport { apiService } from '@tuya/connector';\nimport styles from './index.less';\n\nexport const showDelDeviceConfirmModal = (\n  deviceId: string,\n  t: any,\n  onOk?: () => void,\n) => {\n  const { removeDeviceById } = apiService;\n  Modal.confirm({\n    title: t('removeDevice.title'),\n    content: (\n      <span className={styles['modal-content']}>\n        {t('removeDevice.content')}\n      </span>\n    ),\n    okText: t('removeDevice.confirm'),\n    cancelText: t('removeDevice.cancel'),\n    onOk: () => {\n      return removeDeviceById(deviceId).then(() => {\n        onOk && onOk();\n      });\n    },\n  });\n};\n\nexport default showDelDeviceConfirmModal;\n","/**\n * 添加设备弹窗\n */\nimport _JSXStyle from 'styled-jsx/style';\nimport { useEffect, useState } from 'react';\nimport { Button, Modal, Row, Col } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport QRCode from 'qrcode.react';\nimport { apiService } from '@tuya/connector';\n// import qrcode from './qrcode-scan.png';\n\nconst { getProjectInfo } = apiService;\n\nfunction base64Img2Blob(code) {\n  var parts = code.split(';base64,');\n  var contentType = parts[0].split(':')[1];\n  var raw = window.atob(parts[1]);\n  var rawLength = raw.length;\n\n  var uInt8Array = new Uint8Array(rawLength);\n\n  for (var i = 0; i < rawLength; ++i) {\n    uInt8Array[i] = raw.charCodeAt(i);\n  }\n\n  return new Blob([uInt8Array], { type: contentType });\n}\nfunction downloadFile(canvas) {\n  var aLink = document.createElement('a');\n  var blob = base64Img2Blob(canvas.toDataURL('image/png')); //new Blob([content]);\n\n  aLink.download = new Date().getTime() + '.png';\n  aLink.href = URL.createObjectURL(blob);\n\n  aLink.click();\n}\n\nconst AddDeviceModal = () => {\n  const { t } = useTranslation();\n  const [modalStatus, setModalStatus] = useState<boolean>(false);\n  const [projectName, setProjectName] = useState<string>('');\n  const [projectCode, setProjectCode] = useState<string>('');\n\n  useEffect(() => {\n    getProjectInfo().then((res) => {\n      const { project_name, project_code } = res;\n      if (project_name) {\n        setProjectName(project_name);\n      }\n      if (project_code) {\n        setProjectCode(project_code);\n      }\n    });\n  }, []);\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          setModalStatus(true);\n        }}\n        type=\"primary\"\n        icon={<PlusOutlined />}\n      >\n        {t('addDevice.btn')}\n      </Button>\n\n      <Modal\n        width={600}\n        destroyOnClose\n        visible={modalStatus}\n        title={t('addDevice.title')}\n        onCancel={() => {\n          setModalStatus(false);\n        }}\n        cancelText={t('addDevice.close')}\n        okText={t('addDevice.downloadQrCode')}\n        onOk={() => {\n          var canvas = document.getElementById('qrcode');\n          downloadFile(canvas);\n        }}\n        getContainer={false}\n      >\n        <Row>\n          <Col span={14}>\n            <Row justify=\"center\">\n              <Col className=\"qrTitle\">\n                {t('addDevice.label')}: {projectName}\n              </Col>\n            </Row>\n            <Row justify=\"center\">\n              <Col>\n                <QRCode\n                  id=\"qrcode\"\n                  includeMargin\n                  size={200}\n                  value={`https://tuyasmart.applink.smart321.com/cloud/projects/${projectCode}`}\n                />\n              </Col>\n            </Row>\n            <Row justify=\"center\">\n              <Col className=\"qrHint\">{t('addDevice.hint')}</Col>\n            </Row>\n          </Col>\n          <Col span={10}>\n            <img\n              style={{\n                width: 259,\n                height: 233,\n                marginLeft: -40,\n              }}\n              alt=\"\"\n              src={`/device-app/qrcode-scan.png`}\n            />\n          </Col>\n        </Row>\n        <style jsx scoped>{`\n          .qrTitle {\n            color: #262626;\n            font-weight: bold;\n            font-size: 16px;\n          }\n\n          .qrHint {\n            color: #595959;\n            font-size: 14px;\n            text-align: center;\n          }\n        `}</style>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddDeviceModal;\n","/**\n * 添加设备，中文环境提供小程序配网，其他环境提供链接地址\n */\nimport { useTranslation } from 'react-i18next';\nimport AddDeviceModal from './AddDeviceModal';\n\nconst AddDevice = () => {\n  const { i18n } = useTranslation();\n  if (i18n.language === 'zh-CN') {\n    return <AddDeviceModal />;\n  }\n\n  return (\n    <a href=\"https://github.com/tuya/tuya-android-iot-app-sdk-sample\">\n      Add Device with Tuya IoT App Sample\n    </a>\n  );\n};\n\nexport default AddDevice;\n","import { DataNode } from 'antd/lib/tree';\n\nimport styles from './index.less';\n\n// 过滤资产节点，只显示有关键字的叶子节点和其关键路径上的节点\nexport const filterTreePath = (\n  searchKey: string,\n  dataList: Array<DataNode>,\n) => {\n  const result = [];\n  const path = [];\n  if (!searchKey.length) {\n    return [dataList, path];\n  }\n  dataList.forEach((item) => {\n    const newItem = {\n      ...item,\n    };\n    const index = (newItem.title as string).indexOf(searchKey);\n    if (index > -1) {\n      // 记录key\n      path.push(item.key);\n      const beforeStr = (newItem.title as string).substr(0, index);\n      const afterStr = (newItem.title as string).substr(\n        index + searchKey.length,\n      );\n      newItem.title = (\n        <span>\n          {beforeStr}\n          <span className={styles['tree-highlight-value']}>{searchKey}</span>\n          {afterStr}\n        </span>\n      );\n\n      // 叶子节点保存\n      if (!newItem.children) {\n        result.push(newItem);\n      }\n    }\n\n    const prePathLen = path.length;\n    // 继续遍历子节点\n    if (newItem.children) {\n      const [children, subPath] = filterTreePath(searchKey, newItem.children);\n      newItem.children = children;\n      path.push(...subPath);\n    }\n\n    const afterPathLen = path.length;\n    // 子节点遍历完，对比前后路径长度变化，如果增加，将当前节点加入结果集\n    if (afterPathLen > prePathLen) {\n      result.push(newItem);\n      if (index === -1) {\n        // 补齐path\n        path.push(newItem.key);\n      }\n    } else if (index > -1 && newItem.children) {\n      // 非叶节点命中\n      result.push(newItem);\n    }\n  });\n\n  return [result, path];\n};\n\nexport const getAllExpendKeyFromFirstChild = (\n  dataList: Array<DataNode>,\n  isFirst = false,\n) => {\n  const keys = [];\n  if (isFirst) {\n    const firstChild = dataList[0];\n    keys.push(\n      firstChild.key,\n      ...getAllExpendKeyFromFirstChild(\n        firstChild.children ? firstChild.children : [],\n      ),\n    );\n  } else if (dataList.length) {\n    dataList.forEach((item) => {\n      keys.push(\n        item.key,\n        ...getAllExpendKeyFromFirstChild(item.children ? item.children : []),\n      );\n    });\n  }\n\n  return keys;\n};\n","import { DataNode } from 'antd/lib/tree';\n\nexport const formatAssetTreeData = (list) => {\n  const result = [];\n  list.forEach((item) => {\n    const temp: DataNode = {\n      key: item.asset_id,\n      title: item.asset_name,\n      checkable: false,\n      disabled: item.is_authorized === false,\n      selectable: true,\n      isLeaf: true,\n    };\n\n    if (item?.subAssets.length) {\n      temp.isLeaf = false;\n      temp.children = formatAssetTreeData(item.subAssets);\n    }\n\n    result.push(temp);\n  });\n\n  return result;\n};\n\n// 找到树中，某个节点的所有叶子节点\nexport const getAllLeafNodeByKey = (tree, key, inPath) => {\n  const result = [];\n  if (!Array.isArray(tree) || !tree.length) {\n    return result;\n  }\n  for (let i = 0; i < tree.length; i++) {\n    const item = tree[i];\n    if (item.key === key) {\n      result.push(item.key, ...getAllLeafNodeByKey(item.children, key, true));\n      break;\n    }\n    if (inPath) {\n      if (item.isLeaf) {\n        result.push(item.key);\n      } else {\n        result.push(...getAllLeafNodeByKey(item.children, key, true));\n      }\n    } else {\n      const subResult = getAllLeafNodeByKey(item.children, key, false);\n      if (subResult.length) {\n        // 补齐父节点\n        result.push(item.key, ...subResult);\n      } else {\n        result.push(...subResult);\n      }\n    }\n  }\n\n  return [...result];\n};\n","import { useEffect, useState } from 'react';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Empty, Input, Spin, Typography } from 'antd';\nimport Tree, { DataNode } from 'antd/lib/tree';\nimport { useTranslation } from 'react-i18next';\n\nimport { filterTreePath, getAllExpendKeyFromFirstChild } from './util';\nimport { getAllLeafNodeByKey } from '../YAssetTree/util';\n\ninterface IProps {\n  loading: boolean;\n  title: string;\n  checkable?: boolean;\n  dataList?: Array<DataNode>;\n  defaultSelectedValue?: Array<string>;\n  defaultCheckedValue?: Array<string>;\n  defaultExpandValue?: string[];\n  onSelect?: (key: string) => void;\n  onCheck?: (key: string) => void;\n  treeWrapProps?: any;\n  [key: string]: any;\n}\n\n/**\n * 资产树筛选组件\n * 默认展开一级资产的所有节点\n * 筛选后，高亮资产名，并收缩非关键路径节点\n */\nconst AssetTree = ({\n  loading = false,\n  title,\n  checkable = false,\n  defaultSelectedValue = [],\n  defaultCheckedValue = [],\n  defaultExpandValue = [],\n  dataList = [],\n  onSelect,\n  onCheck,\n  treeWrapProps = {},\n  ...props\n}: IProps) => {\n  const { t } = useTranslation();\n  const [autoExpandParent, setAutoExpandParent] = useState<boolean>(true);\n  const [expandedKeys, setExpandedKeys] =\n    useState<Array<string>>(defaultSelectedValue);\n  const [treeData, setTreeData] = useState<Array<DataNode>>(dataList);\n  const [selectedKeys, setSelectedKeys] =\n    useState<Array<string>>(defaultSelectedValue);\n\n  useEffect(() => {\n    if (defaultExpandValue.length) {\n      setExpandedKeys(defaultExpandValue);\n      setSelectedKeys(defaultSelectedValue);\n    } else if (dataList.length) {\n      const expandedKeys = getAllExpendKeyFromFirstChild(dataList, true);\n      setExpandedKeys(expandedKeys);\n    }\n    setTreeData(dataList);\n  }, [dataList, defaultExpandValue]);\n\n  // 重置为原始数据\n  // const resetTreeData = () => {\n  //   setTreeData(dataList);\n  // };\n\n  const onSearch = (e) => {\n    const { value } = e.target;\n    const [taggedTreeData, expandedPath] = filterTreePath(value, dataList);\n    if (!value.length) {\n      // 搜索被清空\n      if (!selectedKeys.length) {\n        // 默认展开一级所有节点\n        const expandedKeys = getAllExpendKeyFromFirstChild(dataList, true);\n        setExpandedKeys(expandedKeys);\n      } else {\n        // 展开选择节点\n        setExpandedKeys(\n          getAllLeafNodeByKey(taggedTreeData, selectedKeys[0], false),\n        );\n      }\n    } else {\n      setExpandedKeys(expandedPath);\n    }\n    setTreeData(taggedTreeData);\n    setAutoExpandParent(true);\n  };\n\n  const handleExpand = (expandedKeys) => {\n    setAutoExpandParent(false);\n    setExpandedKeys(expandedKeys);\n  };\n\n  const handleSelect = (selectedKeys) => {\n    if (selectedKeys.length) {\n      const key = selectedKeys[selectedKeys.length - 1];\n      setSelectedKeys([key]);\n      onSelect(key);\n    }\n  };\n\n  const handleCheck = () => {};\n\n  return (\n    <Spin spinning={loading}>\n      <Typography.Title level={4}>{title}</Typography.Title>\n      <Input\n        allowClear\n        maxLength={20}\n        style={{ marginBottom: 15 }}\n        placeholder={t('assetTree.searchPlaceholder')}\n        onChange={onSearch}\n        suffix={<SearchOutlined />}\n      />\n      {!loading && treeData.length ? (\n        <div {...treeWrapProps} id=\"debugTree\">\n          <Tree\n            checkable={checkable}\n            onExpand={handleExpand}\n            autoExpandParent={autoExpandParent}\n            expandedKeys={expandedKeys}\n            selectedKeys={selectedKeys}\n            defaultCheckedKeys={defaultCheckedValue}\n            onSelect={handleSelect}\n            onCheck={handleCheck}\n            treeData={treeData}\n          />\n        </div>\n      ) : (\n        <Empty />\n      )}\n    </Spin>\n  );\n};\n\nexport default AssetTree;\n","import { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { DataNode } from 'antd/lib/tree';\nimport { useTranslation } from 'react-i18next';\nimport { apiService } from '@tuya/connector';\n\nimport AssetTree from '../BAssetTree';\nimport { formatAssetTreeData, getAllLeafNodeByKey } from './util';\nimport { useQueryParams } from '@/hooks';\n\ninterface IProps {\n  autoHoldAssetId?: boolean;\n  autoSelectFirst?: boolean;\n  onSelect?: (key: string) => void;\n  onCheck?: (key: string) => void;\n  [key: string]: any;\n}\n\nconst YAssetTree = (props: IProps) => {\n  const { t } = useTranslation();\n  const location = useLocation();\n  const history = useHistory();\n  const query = useQueryParams();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [dataList, setDataList] = useState<DataNode[]>([]);\n  const [defaultValue, setDefaultValue] = useState<string[]>([]);\n  const [expandValues, setExpandValues] = useState<string[]>([]);\n\n  useEffect(() => {\n    setLoading(true);\n    apiService\n      .getEntireTree()\n      .then((res) => {\n        const treeData = formatAssetTreeData(res);\n        // 获取query中的assetId\n        const assetId = query.get('assetId');\n        if (props.autoHoldAssetId && assetId) {\n          // 有指定assetId, 为tree赋予默认值\n          // 需要展开此节点的所有子节点，及其父节点\n          setDefaultValue([assetId]);\n          setExpandValues([...getAllLeafNodeByKey(treeData, assetId, false)]);\n          // 在列表中找到了assetId，直接使用，不关心路径\n          props.onSelect && props.onSelect(assetId);\n        } else if (props.autoSelectFirst && treeData.length) {\n          // 需要展开此节点的所有子节点，及其父节点\n          setDefaultValue([treeData[0].key]);\n          setExpandValues([\n            ...getAllLeafNodeByKey(treeData, treeData[0].key, false),\n          ]);\n          history.push({\n            pathname: location.pathname,\n            search: `?assetId=${treeData[0].key}`,\n          } as any);\n          props.onSelect && props.onSelect(treeData[0].key);\n        }\n        setDataList(treeData);\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  const handleSelect = (key: string) => {\n    history.push({\n      pathname: location.pathname,\n      search: `?assetId=${key}`,\n    } as any);\n    props.onSelect(key);\n  };\n\n  return (\n    <AssetTree\n      title={t('assetTree.title')}\n      loading={loading}\n      dataList={dataList}\n      defaultSelectedValue={defaultValue}\n      defaultExpandValue={expandValues}\n      {...props}\n      onSelect={handleSelect}\n    />\n  );\n};\n\nexport default YAssetTree;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport throttle from 'lodash.throttle';\n\nexport const useQueryParams = () => {\n  return new URLSearchParams(useLocation().search);\n};\n\nexport const useWindowResize = (cb) => {\n  useEffect(() => {\n    window.addEventListener('resize', cb);\n    return () => {\n      window.removeEventListener('resize', cb);\n    };\n  }, [cb]);\n};\n\nexport const useInnerHeight = () => {\n  const [height, setHeight] = useState<number | null>();\n  const [width, setWidth] = useState<number | null>();\n\n  const func = throttle(() => {\n    setHeight(window.innerHeight);\n    setWidth(window.innerWidth);\n  }, 300);\n\n  useWindowResize(func);\n\n  return [height, width];\n};\n","import { useEffect, useState } from 'react';\nimport * as dayjs from 'dayjs';\nimport { Table, Row, Col, Space, Button, Divider } from 'antd';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { apiService, DeviceInfo } from '@tuya/connector';\n\nimport CtrlDP from './components/CtrlDP';\nimport EditDeviceModal from './components/EditDevice';\n\nimport showDelDeviceConfirmModal from '@/components/YDelDeviceModal';\nimport AddDeviceFlow from '@/components/YAddDevice';\nimport YAssetTree from '@/components/YAssetTree';\n\nimport styles from './index.less';\n\nconst { getDevicesInfoByAssetId } = apiService;\n\nconst DeviceList = () => {\n  const { t, i18n } = useTranslation();\n  const [list, setList] = useState<DeviceInfo[]>([]);\n  const [page, setPage] = useState(1);\n  const [pageSize, setPageSize] = useState(20);\n  const [totalCount, setTotalCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const fetchTableData = (\n    assetId: string,\n    curPage: number,\n    curPageSize: number,\n  ) => {\n    if (!assetId) {\n      return;\n    }\n    setLoading(true);\n    getDevicesInfoByAssetId(assetId, curPage, curPageSize)\n      .then((res) => {\n        setLoading(false);\n\n        setList(res?.data || []);\n        setTotalCount(res?.total || 0);\n      })\n      .catch(() => {\n        setLoading(false);\n        setList([]);\n        setTotalCount(0);\n      });\n  };\n\n  // ctrlDP state\n  const [ctrlDPVisible, setCtrlDPVisible] = useState<boolean>(false);\n  const [ctrlDPTitle, setCtrlDPTitle] = useState<string>('');\n  const [ctrlDPDeviceId, setCtrlDPDeviceId] = useState<string>('');\n\n  const configCtrlDP = (show = false, title = '', id = '') => {\n    setCtrlDPVisible(show);\n    setCtrlDPTitle(title);\n    setCtrlDPDeviceId(id);\n  };\n\n  // editDeviceModal state\n  const [editDeviceModalStatus, setEditDeviceModalStatus] = useState(false);\n  const [editDeviceName, setEditDeviceName] = useState('');\n  const [editDeviceId, setEditDeviceId] = useState('');\n\n  const configEditDevice = (show = false, name = '', deviceId = '') => {\n    setEditDeviceModalStatus(show);\n    setEditDeviceName(name);\n    setEditDeviceId(deviceId);\n  };\n\n  // asset cascader state\n  const [assetId, setAssetId] = useState<string>('');\n\n  // list fresh state\n  const [tableFresh, setTableFresh] = useState(0);\n\n  const freshTable = () => {\n    setTableFresh((state) => {\n      return state + 1;\n    });\n  };\n\n  useEffect(() => {\n    fetchTableData(assetId, page, pageSize);\n  }, [tableFresh, assetId, page]);\n\n  const columns: Array<any> = [\n    {\n      title: t('table.column.name'),\n      dataIndex: 'name',\n      width: '20%',\n      className: styles.tableCell,\n    },\n    {\n      title: t('table.column.id'),\n      dataIndex: 'id',\n      className: styles.tableCell,\n    },\n    {\n      title: t('table.column.online'),\n      dataIndex: 'online',\n      render: (text: any, record: any) => {\n        if (record.online) {\n          return (\n            <Space>\n              <span className={`${styles.cycle} ${styles.green}`}></span>\n              <span className={styles.tableCell}>{t('table.row.online')}</span>\n            </Space>\n          );\n        }\n        return (\n          <Space>\n            <span className={`${styles.cycle} ${styles.red}`}></span>\n            <span className={styles.tableCell}>{t('table.row.offline')}</span>\n          </Space>\n        );\n      },\n    },\n    {\n      title: t('table.column.activeTime'),\n      dataIndex: 'active_time',\n      className: styles.tableCell,\n      render: (text: any, record: any) => {\n        const time = dayjs\n          .unix(record.active_time)\n          .format('YYYY-MM-DD HH:mm:ss');\n        return <span className={styles.tableCell}>{time}</span>;\n      },\n    },\n    {\n      title: t('table.column.opt'),\n      dataIndex: 'opt',\n      width: '20%',\n      align: 'center',\n      render: (text: any, record: any) => {\n        return (\n          <Space>\n            <div\n              onClick={() => {\n                configEditDevice(true, record.name, record.id);\n              }}\n              className={styles.textBlue}\n            >\n              {t('table.row.edit')}\n            </div>\n            <div\n              className={styles.textBlue}\n              onClick={() => {\n                configCtrlDP(true, record.name, record.id);\n              }}\n            >\n              {t('table.row.ctrl')}\n            </div>\n            <div\n              className={styles.textBlue}\n              onClick={() => {\n                showDelDeviceConfirmModal(record.id, t, () => {\n                  freshTable();\n                });\n              }}\n            >\n              {t('table.row.remove')}\n            </div>\n          </Space>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <div className={styles.background}>\n        <Row className={styles.ctrlWrapper}>\n          <Col span={4} className={styles.assetTreeWrap}>\n            <YAssetTree\n              treeWrapProps={{\n                className: styles.assetTreeHeight,\n                style: { overflow: 'auto' },\n              }}\n              autoHoldAssetId\n              autoSelectFirst\n              title={t('assetTree.title')}\n              onSelect={(value) => {\n                if (value) {\n                  setAssetId(value);\n                  setPage(1);\n                }\n              }}\n            />\n          </Col>\n          <Col>\n            <Divider type=\"vertical\" style={{ height: '100%' }} />\n          </Col>\n          <Col span={19} className={styles.tableContainerWrap}>\n            <Row justify=\"end\" className={styles.tableCtrlWrap}>\n              <Space>\n                <Button\n                  type=\"primary\"\n                  icon={<ReloadOutlined />}\n                  onClick={freshTable}\n                >\n                  {t('refresh')}\n                </Button>\n                <AddDeviceFlow />\n              </Space>\n            </Row>\n\n            <Table\n              loading={loading}\n              columns={columns}\n              rowKey={(record: any) => record.id}\n              dataSource={list}\n              pagination={{\n                current: page,\n                defaultPageSize: pageSize,\n                pageSize,\n                total: totalCount,\n                onChange: (pageNumber) => {\n                  setPage(pageNumber);\n                },\n                onShowSizeChange: (currentSize, nextPageSize) => {\n                  setPageSize(nextPageSize);\n                  // 重置分页数量\n                  setPage(1);\n                  freshTable();\n                },\n                showSizeChanger: false,\n              }}\n            />\n          </Col>\n        </Row>\n      </div>\n      <CtrlDP\n        visible={ctrlDPVisible}\n        deviceId={ctrlDPDeviceId}\n        title={ctrlDPTitle}\n        onConfirm={() => {\n          configCtrlDP();\n        }}\n      />\n      <EditDeviceModal\n        modalStatus={editDeviceModalStatus}\n        deviceId={editDeviceId}\n        name={editDeviceName}\n        onConfirm={(needFresh) => {\n          configEditDevice();\n          needFresh && freshTable();\n        }}\n      />\n    </>\n  );\n};\n\nexport default DeviceList;\n","import { getI18n } from 'react-i18next';\nimport { configMethod } from '@tuya/connector';\nimport { message } from 'antd';\nimport { mainHistory } from './index';\n\nconst init = () => {\n  const msgWhiteList = [];\n  const i18n = getI18n();\n  const locale = i18n.language;\n  if (locale === 'zh-CN') {\n    i18n.changeLanguage(locale);\n  } else {\n    i18n.changeLanguage('en-US');\n  }\n\n  configMethod.initGlobalConfig({\n    headers: {\n      'Accept-Language': locale === 'zh-CN' ? locale : 'en-US',\n    },\n    baseURL: '/api',\n    onError: (errorObj) => {\n      const { code, msg, apiMethodName } = errorObj;\n\n      if (code === '1010') {\n        localStorage.removeItem('_USERNAME');\n        mainHistory.push('/login');\n        return;\n      }\n\n      // 需屏蔽的方法\n      if (msgWhiteList.includes(apiMethodName)) {\n        return;\n      }\n\n      message.error(msg);\n    },\n  });\n};\n\nexport default init;\n","import { ConfigProvider } from 'antd';\nimport { getI18n } from 'react-i18next';\nimport enUS from 'antd/lib/locale/en_US';\nimport zhCN from 'antd/lib/locale/zh_CN';\n\nimport './App.css';\nimport Page from './pages';\nimport init from '@/init';\n\nfunction App() {\n  init();\n  const i18n = getI18n();\n  const locale = i18n.language === 'zh-CN' ? zhCN : enUS;\n\n  return (\n    <ConfigProvider locale={locale}>\n      <Page />\n    </ConfigProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport './public-path';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { getI18n } from 'react-i18next';\nimport App from './App';\nimport './index.css';\nimport './lang';\n\ninterface IProps {\n  base?: string;\n  container?: any;\n  onGlobalStateChange?: any;\n  setGlobalState?: (state) => void;\n  mainHistory?: any;\n  lang?: string;\n}\n\nfunction render(props: IProps) {\n  const { base, container } = props;\n  ReactDOM.render(\n    <BrowserRouter basename={window.__POWERED_BY_QIANKUN__ ? base : '/'}>\n      <App />\n    </BrowserRouter>,\n    container\n      ? container.querySelector('#root')\n      : document.querySelector('#root'),\n  );\n}\n\nif (!window.__POWERED_BY_QIANKUN__) {\n  render({});\n}\n\nexport async function bootstrap() {\n  // console.log('设备微应用启动');\n}\n\nexport let setGlobalState;\nexport let micState;\nexport let mainHistory: any;\n\nexport async function mount(props: IProps) {\n  // console.log('挂载设备微应用', props);\n  getI18n().changeLanguage(props.lang);\n  mainHistory = props.mainHistory;\n  render(props);\n  props.onGlobalStateChange((state, prev) => {\n    // console.log(state, prev);\n    micState = state;\n  }, true);\n  setGlobalState = (state) => {\n    props.setGlobalState({ ...micState, ...state });\n  };\n}\n\nexport async function unmount(props: IProps) {\n  const { container } = props;\n  ReactDOM.unmountComponentAtNode(\n    container\n      ? container.querySelector('#root')\n      : document.querySelector('#root'),\n  );\n}\n","const en = {\n  translation: {\n    title: 'Device Management',\n    refresh: 'refresh',\n    table: {\n      column: {\n        name: 'Device name',\n        id: 'Device ID',\n        online: 'Online status',\n        activeTime: 'Activation time',\n        opt: 'Operations',\n      },\n      row: {\n        online: 'Online',\n        offline: 'Offline',\n        edit: 'Edit',\n        ctrl: 'Control',\n        remove: 'Remove',\n      },\n    },\n    assetCascader: {\n      title: 'Asset Filter',\n      placeholder: 'Select an asset',\n    },\n    addDevice: {\n      btn: 'Add device',\n      title: 'Scan the QR code with WeChat App to start device paring',\n      close: 'Close',\n      downloadQrCode: 'Download QR Code',\n      label: 'Project Name',\n      hint: 'Scan the code with WeChat, add device to the asset under your project on the Mini Program',\n    },\n    ctrlDP: {\n      cancel: 'Cancel',\n      confirm: 'Confirm',\n      error: 'Need to fill in',\n    },\n    removeDevice: {\n      title: 'Are you sure you want to remove this device?',\n      content:\n        'After the device is removed, you will not be able to manage and control the device. ',\n      confirm: 'Sure to remove',\n      cancel: 'Cancel',\n      error: 'Failed to remove the device!',\n    },\n    editDevice: {\n      title: 'Edit Device',\n      label: 'Device name',\n      error: 'Failed to edit the name!',\n      errorMax: 'Device name support up to 20 characters',\n    },\n    assetTree: {\n      title: 'Asset View',\n      searchPlaceholder: 'Asset name',\n    },\n  },\n};\n\nexport default en;\n","const zh = {\n  translation: {\n    title: '设备管理',\n    refresh: '刷新',\n    table: {\n      column: {\n        name: '设备名称',\n        id: '设备ID',\n        online: '在线状态',\n        activeTime: '激活时间',\n        opt: '操作',\n      },\n      row: {\n        online: '在线',\n        offline: '离线',\n        edit: '编辑',\n        ctrl: '控制',\n        remove: '移除',\n      },\n    },\n    assetCascader: {\n      title: '资产筛选',\n      placeholder: '资产选择',\n    },\n    addDevice: {\n      btn: '添加设备',\n      title: '配网小程序二维码',\n      close: '关闭',\n      downloadQrCode: '下载二维码',\n      label: '项目名',\n      hint: '用微信扫码，在涂鸦智能配网小程序上为您的项目下的资产添加设备',\n    },\n    ctrlDP: {\n      cancel: '取消',\n      confirm: '确认',\n      error: '需要填写',\n    },\n    removeDevice: {\n      title: '确认要移除该设备吗?',\n      content: '设备移除后，您将不能管理、控制该设备。',\n      confirm: '确定移除',\n      cancel: '取消',\n      error: '移除设备失败!',\n    },\n    editDevice: {\n      title: '编辑设备',\n      label: '设备名称',\n      error: '编辑失败!',\n      errorMax: '设备名称最多输入20个字符',\n    },\n    assetTree: {\n      title: '资产筛选',\n      searchPlaceholder: '请输入资产名称',\n    },\n  },\n};\n\nexport default zh;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport en from './en';\nimport zh from './zh';\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: { 'en-US': en, 'zh-CN': zh },\n    fallbackLng: 'zh-CN',\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n"],"sourceRoot":""}